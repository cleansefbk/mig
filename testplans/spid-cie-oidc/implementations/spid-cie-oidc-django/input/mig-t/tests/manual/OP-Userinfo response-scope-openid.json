{
  "test suite": {
    "name": "Single test",
    "description": "One test only",
    "filter messages": true
  },
  "tests": [
    {
      "test": {
        "name": "Does the OP leak information when the scope is only openid",
        "description": "In this test an authorization request is made without the claims parameter and inserting in the scope parameter only the 'openid' value. The OP must return a code that will be exchanged for an access token. Once obtained the access token, the UserInfo endpoint is queried and the response must contain a signed JWT which contains (in the payload) the sub claim and no user attributes.",
        "type": "active",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "session": "s1",
            "action": "start"
          },
          {
            "action": "intercept",
            "from session": "s1",
            "then": "forward",
            "message type": "Authentication request",
            "decode operations": [
              {
                "from": "url",
                "type": "jwt",
                "decode param": "request",
                "edits": [
                  {
                    "jwt from": "payload",
                    "jwt edit": "scope",
                    "value": "openid"
                  },
                  {
                    "jwt sign": "X_key_core_RP"
                  }
                ]
              }
            ]
          },
          {
            "action": "intercept",
            "from session": "s1",
            "then": "forward",
            "message type": "UserInfo response",
            "decode operations": [
              {
                "jwe decrypt": "X_key_jwe",
                "from": "body",
                "type": "jwt",
                "decode param": "[^\\n\\r]*",
                "decode operations": [
                  {
                    "from": "jwt payload",
                    "decode regex": "[^\\n\\r]*",
                    "type": "jwt",
                    "checks": [
                      {
                        "in": "payload",
                        "check regex": "sub"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "result": "assert_only"
      }
    }
  ]
}