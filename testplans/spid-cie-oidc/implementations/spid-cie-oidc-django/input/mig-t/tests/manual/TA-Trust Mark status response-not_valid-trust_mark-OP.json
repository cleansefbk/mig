{
  "test suite": {
    "name": "TA",
    "description": "TA",
    "filter messages": true
  },
  "tests": [
    {
      "test": {
        "name": "Does the TA's trust mark status endpoint correctly refuses a not-valid id Trust Marks OP",
        "description": "In order to check if the trust mark status endpoint of a TA correctly refuses invalid trust marks OP, a invalid trust mark can be sent to the endpoint and the response analyzed.",
        "type": "active",
        "sessions": [
          "s1-logout"
        ],
        "operations": [
          {
            "session": "s1-logout",
            "action": "start"
          },
          {
            "action": "intercept",
            "from session": "s1-logout",
            "then": "forward",
            "message type": "Authentication request",
            "session operations": [
              {
                "session": "s1-logout",
                "insert": "open | http://trust-anchor.org:8000/onboarding/tools/validating-trustmark",
                "at": "ML"
              },
              {
                "session": "s1-logout",
                "insert": "wait | 3000",
                "at": "ML"
              },
              {
                "session": "s1-logout",
                "insert": "click | xpath=/html/body/div[2]/div/div/div/div/div/div/div/div/div/form/input[2]",
                "at": "ML"
              },
              {
                "session": "s1-logout",
                "insert": "wait | 4000",
                "at": "ML"
              },
              {
                "session": "s1-logout",
                "insert": "open | X_trust-mark-endpoint_TA",
                "at": "ML"
              },
              {
                "session": "s1-logout",
                "insert": "wait | 4000",
                "at": "ML"
              }
            ]
          },
          {
            "action": "intercept",
            "from session": "s1-logout",
            "then": "forward",
            "message type": "Validating request",
            "message operations": [
              {
                "from": "url",
                "save": "csrfmiddlewaretoken",
                "as": "save_csrfmiddlewaretoken"
              }
            ]
          },
          {
            "action": "intercept",
            "from session": "s1-logout",
            "then": "forward",
            "message type": "Trust Mark status request TA",
            "edit operations": [
              {
                "from": "head",
                "edit regex": "GET",
                "value": "POST"
              },
              {
                "from": "head",
                "add": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "from": "body",
                "add": "",
                "value": "id="
              },
              {
                "from": "body",
                "add": "",
                "value": "X_wrong_url"
              },
              {
                "from": "body",
                "add": "",
                "value": "&sub="
              },
              {
                "from": "body",
                "add": "",
                "value": "X_url_OP"
              },
              {
                "from": "body",
                "add": "",
                "value": "&csrfmiddlewaretoken="
              },
              {
                "from": "body",
                "add": "",
                "use": "save_csrfmiddlewaretoken"
              }
            ]
          },
          {
            "action": "intercept",
            "from session": "s1-logout",
            "then": "forward",
            "message type": "Trust Mark status response TA",
            "checks": [
              {
                "in": "head",
                "check regex": "HTTP/?\\d?\\.?\\d?\\s200",
                "is present": "true"
              },
              {
                "in": "body",
                "check regex": "\"active\": false",
                "is present": "true"
              }
            ]
          }
        ],
        "result": "assert_only"
      }
    }
  ]
}